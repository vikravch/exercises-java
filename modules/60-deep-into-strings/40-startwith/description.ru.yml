---

name: Поиск стартовой позиции
theory: |

  Одна из частых задач при работе со строками — определить, является ли одна строка частью (подстрокой) другой строки. В большинстве языков программирования есть встроенная функция, предназначенная именно для этой задачи. В Java они есть, но будет полезно написать свои реализации.

  Функция строки indexOf возвращает индекс в данной строке первого вхождения указанной подстроки. Если эта подстрока не встречается, возвращается -1.

  ```java
  "Валар Моргулис".indexOf("Моргулис"));  // 6
  ```

  В примере выше функция вернет 6, что соответствует индексу буквы М.

  ```
  "Валар Моргулис".indexOf("Валар"));  // 0
  "Валар Моргулис".indexOf("Иванов");  // -1
  ```
  Функция indexOf умеет начинать поиск со сдвигом от начала. Мы можем проигнорировать часть строки и таким образом произвести поиск всех вхождений подстроки не только первого. Работает это так:
  
  ```
  "Валар Моргулис".indexOf("а", 2));  // 3
  "Валар Моргулис".indexOf("Валар", 3);  // -1
  ```
  
  В первом примере мы пропустили `Вал` - начало строки длинной 3 символа, и искали уже в оставшейся строке. Важно понимать, что число во втором аргументе функции - индекс после которого поиск начнем а не количество символов. Второй случай - после отступа в 4 символа не нашли искомый `Валар` и получили ответ -1.

  В Java для строки есть функция, которая начинает поиск с хвоста (последнего элемента) до начала - lastIndexOf. Результат она возвращает аналогично indexOf, также возможен сдвиг стартового символа поиска.
instructions: |

  Реализуйте функцию `startsWith`, которая определяет, начинается ли строка с подстроки.

  ```
  startsWith("Баратеон", "он"); // false
  startsWith("Баратеон", "Бар"); // true
  ```

# tips: []

# definitions: []
